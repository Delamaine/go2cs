<# // This template creates the function initializations in a <PackageName>_<InterfaceName>Interface.cs file #>
<#@ template language="C#" #>


                extensionMethod = targetType.GetExtensionMethod("<#=FunctionName#>");

                if ((object)extensionMethod != null)
                {
                    s_<#=FunctionName#>ByRef = extensionMethod.CreateStaticDelegate(typeof(<#=FunctionName#>ByRef)) as <#=FunctionName#>ByRef;

                    if ((object)s_<#=FunctionName#>ByRef == null)
                        s_<#=FunctionName#>ByVal = extensionMethod.CreateStaticDelegate(typeof(<#=FunctionName#>ByVal)) as <#=FunctionName#>ByVal;
                }

                if ((object)s_<#=FunctionName#>ByRef == null && (object)s_<#=FunctionName#>ByVal == null)
                    throw new NotImplementedException($"{targetType.Name} does not implement <#=InterfaceName#>.<#=FunctionName#> method", new Exception("<#=FunctionName#>"));<#+
// Template Parameters
public string FunctionName;
public string InterfaceName;
#>