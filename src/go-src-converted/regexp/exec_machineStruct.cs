//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:24:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using io = go.io_package;
using syntax = go.regexp.syntax_package;

namespace go
{
    public static partial class regexp_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct machine
        {
            // Constructors
            public machine(NilType _)
            {
                this.re = default;
                this.p = default;
                this.op = default;
                this.maxBitStateLen = default;
                this.b = default;
                this.q0 = default;
                this.q1 = default;
                this.pool = default;
                this.matched = default;
                this.matchcap = default;
                this.inputBytes = default;
                this.inputString = default;
                this.inputReader = default;
            }

            public machine(ref ptr<Regexp> re = default, ref ptr<syntax.Prog> p = default, ref ptr<onePassProg> op = default, long maxBitStateLen = default, ref ptr<bitState> b = default, queue q0 = default, queue q1 = default, slice<ref thread> pool = default, bool matched = default, slice<long> matchcap = default, inputBytes inputBytes = default, inputString inputString = default, inputReader inputReader = default)
            {
                this.re = re;
                this.p = p;
                this.op = op;
                this.maxBitStateLen = maxBitStateLen;
                this.b = b;
                this.q0 = q0;
                this.q1 = q1;
                this.pool = pool;
                this.matched = matched;
                this.matchcap = matchcap;
                this.inputBytes = inputBytes;
                this.inputString = inputString;
                this.inputReader = inputReader;
            }

            // Enable comparisons between nil and machine struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(machine value, NilType nil) => value.Equals(default(machine));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(machine value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, machine value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, machine value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator machine(NilType nil) => default(machine);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static machine machine_cast(dynamic value)
        {
            return new machine(ref value.re, ref value.p, ref value.op, value.maxBitStateLen, ref value.b, value.q0, value.q1, value.pool, value.matched, value.matchcap, value.inputBytes, value.inputString, value.inputReader);
        }
    }
}