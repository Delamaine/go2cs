//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 10:05:56 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using errors = go.errors_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using race = go.@internal.race_package;
using io = go.io_package;
using os = go.os_package;
using runtime = go.runtime_package;
using debug = go.runtime.debug_package;
using trace = go.runtime.trace_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;

namespace go
{
    public static partial class testing_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct common
        {
            // Constructors
            public common(NilType _)
            {
                this.mu = default;
                this.output = default;
                this.w = default;
                this.ran = default;
                this.failed = default;
                this.skipped = default;
                this.done = default;
                this.chatty = default;
                this.finished = default;
                this.hasSub = default;
                this.raceErrors = default;
                this.runner = default;
                this.parent = default;
                this.level = default;
                this.name = default;
                this.start = default;
                this.duration = default;
                this.barrier = default;
                this.signal = default;
                this.sub = default;
            }

            public common(sync.RWMutex mu = default, slice<byte> output = default, io.Writer w = default, bool ran = default, bool failed = default, bool skipped = default, bool done = default, bool chatty = default, bool finished = default, int hasSub = default, long raceErrors = default, @string runner = default, ref ptr<common> parent = default, long level = default, @string name = default, time.Time start = default, time.Duration duration = default, channel<bool> barrier = default, channel<bool> signal = default, slice<ref T> sub = default)
            {
                this.mu = mu;
                this.output = output;
                this.w = w;
                this.ran = ran;
                this.failed = failed;
                this.skipped = skipped;
                this.done = done;
                this.chatty = chatty;
                this.finished = finished;
                this.hasSub = hasSub;
                this.raceErrors = raceErrors;
                this.runner = runner;
                this.parent = parent;
                this.level = level;
                this.name = name;
                this.start = start;
                this.duration = duration;
                this.barrier = barrier;
                this.signal = signal;
                this.sub = sub;
            }

            // Enable comparisons between nil and common struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(common value, NilType nil) => value.Equals(default(common));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(common value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, common value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, common value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator common(NilType nil) => default(common);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static common common_cast(dynamic value)
        {
            return new common(value.mu, value.output, value.w, value.ran, value.failed, value.skipped, value.done, value.chatty, value.finished, value.hasSub, value.raceErrors, value.runner, ref value.parent, value.level, value.name, value.start, value.duration, value.barrier, value.signal, value.sub);
        }
    }
}