//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:37:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using io = go.io_package;
using sync = go.sync_package;

namespace go
{
    public static partial class syscall_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(defaultFileImpl))]
        private partial struct pipeFile
        {
            // defaultFileImpl structure promotion - sourced from value copy
            private readonly ptr<defaultFileImpl> m_defaultFileImplRef;

            private ref defaultFileImpl defaultFileImpl_val => ref m_defaultFileImplRef.Value;

            // Constructors
            public pipeFile(NilType _)
            {
                this.m_defaultFileImplRef = new ptr<defaultFileImpl>(new defaultFileImpl(nil));
                this.rd = default;
                this.wr = default;
            }

            public pipeFile(defaultFileImpl defaultFileImpl = default, ref ptr<byteq> rd = default, ref ptr<byteq> wr = default)
            {
                this.m_defaultFileImplRef = new ptr<defaultFileImpl>(defaultFileImpl);
                this.rd = rd;
                this.wr = wr;
            }

            // Enable comparisons between nil and pipeFile struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(pipeFile value, NilType nil) => value.Equals(default(pipeFile));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(pipeFile value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, pipeFile value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, pipeFile value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator pipeFile(NilType nil) => default(pipeFile);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static pipeFile pipeFile_cast(dynamic value)
        {
            return new pipeFile(value.defaultFileImpl, ref value.rd, ref value.wr);
        }
    }
}