//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:37:13 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using io = go.io_package;
using sync = go.sync_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class syscall_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct fsysFile
        {
            // Constructors
            public fsysFile(NilType _)
            {
                this.defaultFileImpl = default;
                this.fsys = default;
                this.inode = default;
                this.openmode = default;
                this.offset = default;
                this.dev = default;
            }

            public fsysFile(defaultFileImpl defaultFileImpl = default, ref ptr<fsys> fsys = default, ref ptr<inode> inode = default, long openmode = default, long offset = default, devFile dev = default)
            {
                this.defaultFileImpl = defaultFileImpl;
                this.fsys = fsys;
                this.inode = inode;
                this.openmode = openmode;
                this.offset = offset;
                this.dev = dev;
            }

            // Enable comparisons between nil and fsysFile struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(fsysFile value, NilType nil) => value.Equals(default(fsysFile));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(fsysFile value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, fsysFile value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, fsysFile value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator fsysFile(NilType nil) => default(fsysFile);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static fsysFile fsysFile_cast(dynamic value)
        {
            return new fsysFile(value.defaultFileImpl, ref value.fsys, ref value.inode, value.openmode, value.offset, value.dev);
        }
    }
}