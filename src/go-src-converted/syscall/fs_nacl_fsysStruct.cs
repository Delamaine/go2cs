//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:37:13 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using io = go.io_package;
using sync = go.sync_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class syscall_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct fsys
        {
            // Constructors
            public fsys(NilType _)
            {
                this.mu = default;
                this.root = default;
                this.cwd = default;
                this.inum = default;
                this.dev = default;
            }

            public fsys(sync.Mutex mu = default, ref ptr<inode> root = default, ref ptr<inode> cwd = default, ulong inum = default, slice<Func<(devFile, error)>> dev = default)
            {
                this.mu = mu;
                this.root = root;
                this.cwd = cwd;
                this.inum = inum;
                this.dev = dev;
            }

            // Enable comparisons between nil and fsys struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(fsys value, NilType nil) => value.Equals(default(fsys));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(fsys value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, fsys value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, fsys value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator fsys(NilType nil) => default(fsys);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static fsys fsys_cast(dynamic value)
        {
            return new fsys(value.mu, ref value.root, ref value.cwd, value.inum, value.dev);
        }
    }
}