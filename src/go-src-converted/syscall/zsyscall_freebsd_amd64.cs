// mksyscall.pl -tags freebsd,amd64 syscall_bsd.go syscall_freebsd.go syscall_freebsd_amd64.go
// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT

// +build freebsd,amd64

// package syscall -- go2cs converted at 2020 August 29 08:39:36 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Go\src\syscall\zsyscall_freebsd_amd64.go
using @unsafe = go.@unsafe_package;
using static go.builtin;

namespace go
{
    public static partial class syscall_package
    {
        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
        private static (long, error) getgroups(long ngid, ref _Gid_t gid)
        {
            var (r0, _, e1) = RawSyscall(SYS_GETGROUPS, uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error setgroups(long ngid, ref _Gid_t gid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETGROUPS, uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) wait4(long pid, ref _C_int wstatus, long options, ref Rusage rusage)
        {
            var (r0, _, e1) = Syscall6(SYS_WAIT4, uintptr(pid), uintptr(@unsafe.Pointer(wstatus)), uintptr(options), uintptr(@unsafe.Pointer(rusage)), 0L, 0L);
            wpid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) accept(long s, ref RawSockaddrAny rsa, ref _Socklen addrlen)
        {
            var (r0, _, e1) = Syscall(SYS_ACCEPT, uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error bind(long s, unsafe.Pointer addr, _Socklen addrlen)
        {
            var (_, _, e1) = Syscall(SYS_BIND, uintptr(s), uintptr(addr), uintptr(addrlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error connect(long s, unsafe.Pointer addr, _Socklen addrlen)
        {
            var (_, _, e1) = Syscall(SYS_CONNECT, uintptr(s), uintptr(addr), uintptr(addrlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) socket(long domain, long typ, long proto)
        {
            var (r0, _, e1) = RawSyscall(SYS_SOCKET, uintptr(domain), uintptr(typ), uintptr(proto));
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getsockopt(long s, long level, long name, unsafe.Pointer val, ref _Socklen vallen)
        {
            var (_, _, e1) = Syscall6(SYS_GETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(@unsafe.Pointer(vallen)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error setsockopt(long s, long level, long name, unsafe.Pointer val, System.UIntPtr vallen)
        {
            var (_, _, e1) = Syscall6(SYS_SETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getpeername(long fd, ref RawSockaddrAny rsa, ref _Socklen addrlen)
        {
            var (_, _, e1) = RawSyscall(SYS_GETPEERNAME, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getsockname(long fd, ref RawSockaddrAny rsa, ref _Socklen addrlen)
        {
            var (_, _, e1) = RawSyscall(SYS_GETSOCKNAME, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Shutdown(long s, long how)
        {
            var (_, _, e1) = Syscall(SYS_SHUTDOWN, uintptr(s), uintptr(how), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error socketpair(long domain, long typ, long proto, ref array<int> fd)
        {
            var (_, _, e1) = RawSyscall6(SYS_SOCKETPAIR, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(@unsafe.Pointer(fd)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) recvfrom(long fd, slice<byte> p, long flags, ref RawSockaddrAny from, ref _Socklen fromlen)
        {
            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(ref p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall6(SYS_RECVFROM, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(@unsafe.Pointer(from)), uintptr(@unsafe.Pointer(fromlen)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error sendto(long s, slice<byte> buf, long flags, unsafe.Pointer to, _Socklen addrlen)
        {
            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(ref buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (_, _, e1) = Syscall6(SYS_SENDTO, uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) recvmsg(long s, ref Msghdr msg, long flags)
        {
            var (r0, _, e1) = Syscall(SYS_RECVMSG, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) sendmsg(long s, ref Msghdr msg, long flags)
        {
            var (r0, _, e1) = Syscall(SYS_SENDMSG, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) kevent(long kq, unsafe.Pointer change, long nchange, unsafe.Pointer @event, long nevent, ref Timespec timeout)
        {
            var (r0, _, e1) = Syscall6(SYS_KEVENT, uintptr(kq), uintptr(change), uintptr(nchange), uintptr(event), uintptr(nevent), uintptr(@unsafe.Pointer(timeout)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error sysctl(slice<_C_int> mib, ref byte old, ref System.UIntPtr oldlen, ref byte @new, System.UIntPtr newlen)
        {
            unsafe.Pointer _p0 = default;
            if (len(mib) > 0L)
            {
                _p0 = @unsafe.Pointer(ref mib[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (_, _, e1) = Syscall6(SYS___SYSCTL, uintptr(_p0), uintptr(len(mib)), uintptr(@unsafe.Pointer(old)), uintptr(@unsafe.Pointer(oldlen)), uintptr(@unsafe.Pointer(new)), uintptr(newlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error utimes(@string path, ref array<Timeval> timeval)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_UTIMES, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(timeval)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error futimes(long fd, ref array<Timeval> timeval)
        {
            var (_, _, e1) = Syscall(SYS_FUTIMES, uintptr(fd), uintptr(@unsafe.Pointer(timeval)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) fcntl(long fd, long cmd, long arg)
        {
            var (r0, _, e1) = Syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg));
            val = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error pipe2(ref array<_C_int> p, long flags)
        {
            var (_, _, e1) = RawSyscall(SYS_PIPE2, uintptr(@unsafe.Pointer(p)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Access(@string path, uint mode)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_ACCESS, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Adjtime(ref Timeval delta, ref Timeval olddelta)
        {
            var (_, _, e1) = Syscall(SYS_ADJTIME, uintptr(@unsafe.Pointer(delta)), uintptr(@unsafe.Pointer(olddelta)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chdir(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_CHDIR, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chflags(@string path, long flags)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_CHFLAGS, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chmod(@string path, uint mode)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_CHMOD, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chown(@string path, long uid, long gid)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_CHOWN, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chroot(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_CHROOT, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Close(long fd)
        {
            var (_, _, e1) = Syscall(SYS_CLOSE, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Dup(long fd)
        {
            var (r0, _, e1) = Syscall(SYS_DUP, uintptr(fd), 0L, 0L);
            nfd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Dup2(long from, long to)
        {
            var (_, _, e1) = Syscall(SYS_DUP2, uintptr(from), uintptr(to), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchdir(long fd)
        {
            var (_, _, e1) = Syscall(SYS_FCHDIR, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchflags(long fd, long flags)
        {
            var (_, _, e1) = Syscall(SYS_FCHFLAGS, uintptr(fd), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchmod(long fd, uint mode)
        {
            var (_, _, e1) = Syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchown(long fd, long uid, long gid)
        {
            var (_, _, e1) = Syscall(SYS_FCHOWN, uintptr(fd), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Flock(long fd, long how)
        {
            var (_, _, e1) = Syscall(SYS_FLOCK, uintptr(fd), uintptr(how), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Fpathconf(long fd, long name)
        {
            var (r0, _, e1) = Syscall(SYS_FPATHCONF, uintptr(fd), uintptr(name), 0L);
            val = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fstat(long fd, ref Stat_t stat)
        {
            var (_, _, e1) = Syscall(SYS_FSTAT, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fstatfs(long fd, ref Statfs_t stat)
        {
            var (_, _, e1) = Syscall(SYS_FSTATFS, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fsync(long fd)
        {
            var (_, _, e1) = Syscall(SYS_FSYNC, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Ftruncate(long fd, long length)
        {
            var (_, _, e1) = Syscall(SYS_FTRUNCATE, uintptr(fd), uintptr(length), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getdirentries(long fd, slice<byte> buf, ref System.UIntPtr basep)
        {
            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(ref buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall6(SYS_GETDIRENTRIES, uintptr(fd), uintptr(_p0), uintptr(len(buf)), uintptr(@unsafe.Pointer(basep)), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getdtablesize()
        {
            var (r0, _, _) = Syscall(SYS_GETDTABLESIZE, 0L, 0L, 0L);
            size = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getegid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETEGID, 0L, 0L, 0L);
            egid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Geteuid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETEUID, 0L, 0L, 0L);
            uid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getgid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETGID, 0L, 0L, 0L);
            gid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpgid(long pid)
        {
            var (r0, _, e1) = RawSyscall(SYS_GETPGID, uintptr(pid), 0L, 0L);
            pgid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getpgrp()
        {
            var (r0, _, _) = RawSyscall(SYS_GETPGRP, 0L, 0L, 0L);
            pgrp = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getpid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETPID, 0L, 0L, 0L);
            pid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getppid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETPPID, 0L, 0L, 0L);
            ppid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpriority(long which, long who)
        {
            var (r0, _, e1) = Syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0L);
            prio = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Getrlimit(long which, ref Rlimit lim)
        {
            var (_, _, e1) = RawSyscall(SYS_GETRLIMIT, uintptr(which), uintptr(@unsafe.Pointer(lim)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Getrusage(long who, ref Rusage rusage)
        {
            var (_, _, e1) = RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(@unsafe.Pointer(rusage)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getsid(long pid)
        {
            var (r0, _, e1) = RawSyscall(SYS_GETSID, uintptr(pid), 0L, 0L);
            sid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Gettimeofday(ref Timeval tv)
        {
            var (_, _, e1) = RawSyscall(SYS_GETTIMEOFDAY, uintptr(@unsafe.Pointer(tv)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getuid()
        {
            var (r0, _, _) = RawSyscall(SYS_GETUID, 0L, 0L, 0L);
            uid = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static bool Issetugid()
        {
            var (r0, _, _) = Syscall(SYS_ISSETUGID, 0L, 0L, 0L);
            tainted = bool(r0 != 0L);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Kill(long pid, Signal signum)
        {
            var (_, _, e1) = Syscall(SYS_KILL, uintptr(pid), uintptr(signum), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Kqueue()
        {
            var (r0, _, e1) = Syscall(SYS_KQUEUE, 0L, 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lchown(@string path, long uid, long gid)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_LCHOWN, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Link(@string path, @string link)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            ref byte _p1 = default;
            _p1, err = BytePtrFromString(link);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_LINK, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Listen(long s, long backlog)
        {
            var (_, _, e1) = Syscall(SYS_LISTEN, uintptr(s), uintptr(backlog), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lstat(@string path, ref Stat_t stat)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_LSTAT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mkdir(@string path, uint mode)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_MKDIR, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mkfifo(@string path, uint mode)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_MKFIFO, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mknod(@string path, uint mode, long dev)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_MKNOD, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Nanosleep(ref Timespec time, ref Timespec leftover)
        {
            var (_, _, e1) = Syscall(SYS_NANOSLEEP, uintptr(@unsafe.Pointer(time)), uintptr(@unsafe.Pointer(leftover)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Open(@string path, long mode, uint perm)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (r0, _, e1) = Syscall(SYS_OPEN, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm));
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pathconf(@string path, long name)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (r0, _, e1) = Syscall(SYS_PATHCONF, uintptr(@unsafe.Pointer(_p0)), uintptr(name), 0L);
            val = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pread(long fd, slice<byte> p, long offset)
        {
            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(ref p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall6(SYS_PREAD, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pwrite(long fd, slice<byte> p, long offset)
        {
            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(ref p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall6(SYS_PWRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) read(long fd, slice<byte> p)
        {
            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(ref p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Readlink(@string path, slice<byte> buf)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            unsafe.Pointer _p1 = default;
            if (len(buf) > 0L)
            {
                _p1 = @unsafe.Pointer(ref buf[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall(SYS_READLINK, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Rename(@string from, @string to)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(from);
            if (err != null)
            {
                return;
            }
            ref byte _p1 = default;
            _p1, err = BytePtrFromString(to);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_RENAME, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Revoke(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_REVOKE, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Rmdir(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_RMDIR, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Seek(long fd, long offset, long whence)
        {
            var (r0, _, e1) = Syscall(SYS_LSEEK, uintptr(fd), uintptr(offset), uintptr(whence));
            newoffset = int64(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Select(long n, ref FdSet r, ref FdSet w, ref FdSet e, ref Timeval timeout)
        {
            var (_, _, e1) = Syscall6(SYS_SELECT, uintptr(n), uintptr(@unsafe.Pointer(r)), uintptr(@unsafe.Pointer(w)), uintptr(@unsafe.Pointer(e)), uintptr(@unsafe.Pointer(timeout)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setegid(long egid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETEGID, uintptr(egid), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Seteuid(long euid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETEUID, uintptr(euid), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setgid(long gid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETGID, uintptr(gid), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setlogin(@string name)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(name);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_SETLOGIN, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpgid(long pid, long pgid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpriority(long which, long who, long prio)
        {
            var (_, _, e1) = Syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setregid(long rgid, long egid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETREGID, uintptr(rgid), uintptr(egid), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setreuid(long ruid, long euid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETREUID, uintptr(ruid), uintptr(euid), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setrlimit(long which, ref Rlimit lim)
        {
            var (_, _, e1) = RawSyscall(SYS_SETRLIMIT, uintptr(which), uintptr(@unsafe.Pointer(lim)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Setsid()
        {
            var (r0, _, e1) = RawSyscall(SYS_SETSID, 0L, 0L, 0L);
            pid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Settimeofday(ref Timeval tp)
        {
            var (_, _, e1) = RawSyscall(SYS_SETTIMEOFDAY, uintptr(@unsafe.Pointer(tp)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setuid(long uid)
        {
            var (_, _, e1) = RawSyscall(SYS_SETUID, uintptr(uid), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Stat(@string path, ref Stat_t stat)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_STAT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Statfs(@string path, ref Statfs_t stat)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_STATFS, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Symlink(@string path, @string link)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            ref byte _p1 = default;
            _p1, err = BytePtrFromString(link);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_SYMLINK, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Sync()
        {
            var (_, _, e1) = Syscall(SYS_SYNC, 0L, 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Truncate(@string path, long length)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_TRUNCATE, uintptr(@unsafe.Pointer(_p0)), uintptr(length), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Umask(long newmask)
        {
            var (r0, _, _) = Syscall(SYS_UMASK, uintptr(newmask), 0L, 0L);
            oldmask = int(r0);
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Undelete(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_UNDELETE, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unlink(@string path)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_UNLINK, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unmount(@string path, long flags)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall(SYS_UNMOUNT, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) write(long fd, slice<byte> p)
        {
            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(ref p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(ref _zero);
            }
            var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, error) mmap(System.UIntPtr addr, System.UIntPtr length, long prot, long flag, long fd, long pos)
        {
            var (r0, _, e1) = Syscall6(SYS_MMAP, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), uintptr(pos));
            ret = uintptr(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error munmap(System.UIntPtr addr, System.UIntPtr length)
        {
            var (_, _, e1) = Syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) readlen(long fd, ref byte buf, long nbuf)
        {
            var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(@unsafe.Pointer(buf)), uintptr(nbuf));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) writelen(long fd, ref byte buf, long nbuf)
        {
            var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(@unsafe.Pointer(buf)), uintptr(nbuf));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) accept4(long fd, ref RawSockaddrAny rsa, ref _Socklen addrlen, long flags)
        {
            var (r0, _, e1) = Syscall6(SYS_ACCEPT4, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)), uintptr(flags), 0L, 0L);
            nfd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error utimensat(long dirfd, @string path, ref array<Timespec> times, long flag)
        {
            ref byte _p0 = default;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return;
            }
            var (_, _, e1) = Syscall6(SYS_UTIMENSAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), uintptr(flag), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return;
        }
    }
}
