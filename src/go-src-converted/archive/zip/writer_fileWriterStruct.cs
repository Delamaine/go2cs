//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:45:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using binary = go.encoding.binary_package;
using errors = go.errors_package;
using hash = go.hash_package;
using crc32 = go.hash.crc32_package;
using io = go.io_package;
using utf8 = go.unicode.utf8_package;
using go;

namespace go {
namespace archive
{
    public static partial class zip_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(header))]
        private partial struct fileWriter
        {
            // header structure promotion - sourced from pointer
            private readonly ptr<header> m_headerRef;

            private ref header header_ptr => ref m_headerRef.Value;

            public ref ulong offset => ref m_headerRef.Value.offset;

            // Constructors
            public fileWriter(NilType _)
            {
                this.m_headerRef = new ptr<header>(new header(nil));
                this.zipw = default;
                this.rawCount = default;
                this.comp = default;
                this.compCount = default;
                this.crc32 = default;
                this.closed = default;
            }

            public fileWriter(ref header header = default, io.Writer zipw = default, ref ptr<countWriter> rawCount = default, io.WriteCloser comp = default, ref ptr<countWriter> compCount = default, hash.Hash32 crc32 = default, bool closed = default)
            {
                this.m_headerRef = new ptr<header>(ref header);
                this.zipw = zipw;
                this.rawCount = rawCount;
                this.comp = comp;
                this.compCount = compCount;
                this.crc32 = crc32;
                this.closed = closed;
            }

            // Enable comparisons between nil and fileWriter struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(fileWriter value, NilType nil) => value.Equals(default(fileWriter));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(fileWriter value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, fileWriter value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, fileWriter value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator fileWriter(NilType nil) => default(fileWriter);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static fileWriter fileWriter_cast(dynamic value)
        {
            return new fileWriter(ref value.header, value.zipw, ref value.rawCount, value.comp, ref value.compCount, value.crc32, value.closed);
        }
    }
}}