//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:33:44 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using context = go.context_package;
using tls = go.crypto.tls_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using ioutil = go.io.ioutil_package;
using log = go.log_package;
using net = go.net_package;
using textproto = go.net.textproto_package;
using url = go.net.url_package;
using os = go.os_package;
using path = go.path_package;
using runtime = go.runtime_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;
using httplex = go.golang_org.x.net.lex.httplex_package;
using go;

namespace go {
namespace net
{
    public static partial class http_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Server
        {
            // Constructors
            public Server(NilType _)
            {
                this.Addr = default;
                this.Handler = default;
                this.TLSConfig = default;
                this.ReadTimeout = default;
                this.ReadHeaderTimeout = default;
                this.WriteTimeout = default;
                this.IdleTimeout = default;
                this.MaxHeaderBytes = default;
                this.TLSNextProto = default;
                this.ConnState = default;
                this.ErrorLog = default;
                this.disableKeepAlives = default;
                this.inShutdown = default;
                this.nextProtoOnce = default;
                this.nextProtoErr = default;
                this.mu = default;
                this.doneChan = default;
                this.onShutdown = default;
            }

            public Server(@string Addr = default, Handler Handler = default, ref ptr<tls.Config> TLSConfig = default, time.Duration ReadTimeout = default, time.Duration ReadHeaderTimeout = default, time.Duration WriteTimeout = default, time.Duration IdleTimeout = default, long MaxHeaderBytes = default, map<@string, Action<ref Server, ref tls.Conn, Handler>> TLSNextProto = default, Action<net.Conn, ConnState> ConnState = default, ref ptr<log.Logger> ErrorLog = default, int disableKeepAlives = default, int inShutdown = default, sync.Once nextProtoOnce = default, error nextProtoErr = default, sync.Mutex mu = default, channel<object> doneChan = default, slice<Action> onShutdown = default)
            {
                this.Addr = Addr;
                this.Handler = Handler;
                this.TLSConfig = TLSConfig;
                this.ReadTimeout = ReadTimeout;
                this.ReadHeaderTimeout = ReadHeaderTimeout;
                this.WriteTimeout = WriteTimeout;
                this.IdleTimeout = IdleTimeout;
                this.MaxHeaderBytes = MaxHeaderBytes;
                this.TLSNextProto = TLSNextProto;
                this.ConnState = ConnState;
                this.ErrorLog = ErrorLog;
                this.disableKeepAlives = disableKeepAlives;
                this.inShutdown = inShutdown;
                this.nextProtoOnce = nextProtoOnce;
                this.nextProtoErr = nextProtoErr;
                this.mu = mu;
                this.doneChan = doneChan;
                this.onShutdown = onShutdown;
            }

            // Enable comparisons between nil and Server struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Server value, NilType nil) => value.Equals(default(Server));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Server value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Server value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Server value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Server(NilType nil) => default(Server);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Server Server_cast(dynamic value)
        {
            return new Server(value.Addr, value.Handler, ref value.TLSConfig, value.ReadTimeout, value.ReadHeaderTimeout, value.WriteTimeout, value.IdleTimeout, value.MaxHeaderBytes, value.TLSNextProto, value.ConnState, ref value.ErrorLog, value.disableKeepAlives, value.inShutdown, value.nextProtoOnce, value.nextProtoErr, value.mu, value.doneChan, value.onShutdown);
        }
    }
}}