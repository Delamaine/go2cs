//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:25:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct byPriorityWeight
        {
            // Value of the byPriorityWeight struct
            private readonly slice<ref SRV> m_value;

            public byPriorityWeight(slice<ref SRV> value) => m_value = value;

            // Enable implicit conversions between slice<ref SRV> and byPriorityWeight struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator byPriorityWeight(slice<ref SRV> value) => new byPriorityWeight(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<ref SRV>(byPriorityWeight value) => value.m_value;
            
            // Enable comparisons between nil and byPriorityWeight struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(byPriorityWeight value, NilType nil) => value.Equals(default(byPriorityWeight));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(byPriorityWeight value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, byPriorityWeight value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, byPriorityWeight value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator byPriorityWeight(NilType nil) => default(byPriorityWeight);
        }
    }
}
