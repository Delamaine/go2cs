//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:47:12 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

namespace go {
namespace go
{
    public static partial class e_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(V3))]
        public partial struct V2
        {
            // V3 structure promotion - sourced from pointer
            private readonly ptr<V3> m_V3Ref;

            private ref V3 V3_ptr => ref m_V3Ref.Value;

            // Constructors
            public V2(NilType _)
            {
                this.m_V3Ref = new ptr<V3>(new V3(nil));
            }

            public V2(ref V3 V3 = default)
            {
                this.m_V3Ref = new ptr<V3>(ref V3);
            }

            // Enable comparisons between nil and V2 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(V2 value, NilType nil) => value.Equals(default(V2));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(V2 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, V2 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, V2 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator V2(NilType nil) => default(V2);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static V2 V2_cast(dynamic value)
        {
            return new V2(ref value.V3);
        }
    }
}}