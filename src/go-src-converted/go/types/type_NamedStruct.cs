//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:48:02 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using sort = go.sort_package;
using go;

namespace go {
namespace go
{
    public static partial class types_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Named
        {
            // Constructors
            public Named(NilType _)
            {
                this.obj = default;
                this.underlying = default;
                this.methods = default;
            }

            public Named(ref ptr<TypeName> obj = default, Type underlying = default, slice<ref Func> methods = default)
            {
                this.obj = obj;
                this.underlying = underlying;
                this.methods = methods;
            }

            // Enable comparisons between nil and Named struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Named value, NilType nil) => value.Equals(default(Named));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Named value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Named value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Named value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Named(NilType nil) => default(Named);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Named Named_cast(dynamic value)
        {
            return new Named(ref value.obj, value.underlying, value.methods);
        }
    }
}}