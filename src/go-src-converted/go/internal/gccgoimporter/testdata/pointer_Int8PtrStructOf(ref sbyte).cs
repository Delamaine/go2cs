//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 10:09:23 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace go {
namespace @internal
{
    public static partial class pointer_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Int8Ptr
        {
            // Value of the Int8Ptr struct
            private readonly ref sbyte m_value;

            public Int8Ptr(ref sbyte value) => m_value = value;

            // Enable implicit conversions between ref sbyte and Int8Ptr struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Int8Ptr(ref sbyte value) => new Int8Ptr(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ref sbyte(Int8Ptr value) => value.m_value;
            
            // Enable comparisons between nil and Int8Ptr struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Int8Ptr value, NilType nil) => value.Equals(default(Int8Ptr));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Int8Ptr value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Int8Ptr value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Int8Ptr value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Int8Ptr(NilType nil) => default(Int8Ptr);
        }
    }
}}}
