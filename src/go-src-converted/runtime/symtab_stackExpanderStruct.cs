//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:21:05 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct stackExpander
        {
            // Constructors
            public stackExpander(NilType _)
            {
                this.pcExpander = default;
                this.wasPanic = default;
                this.skip = default;
            }

            public stackExpander(pcExpander pcExpander = default, bool wasPanic = default, long skip = default)
            {
                this.pcExpander = pcExpander;
                this.wasPanic = wasPanic;
                this.skip = skip;
            }

            // Enable comparisons between nil and stackExpander struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(stackExpander value, NilType nil) => value.Equals(default(stackExpander));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(stackExpander value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, stackExpander value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, stackExpander value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator stackExpander(NilType nil) => default(stackExpander);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static stackExpander stackExpander_cast(dynamic value)
        {
            return new stackExpander(value.pcExpander, value.wasPanic, value.skip);
        }
    }
}