//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:31:33 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using crypto = go.crypto_package;
using ecdsa = go.crypto.ecdsa_package;
using elliptic = go.crypto.elliptic_package;
using md5 = go.crypto.md5_package;
using rsa = go.crypto.rsa_package;
using sha1 = go.crypto.sha1_package;
using x509 = go.crypto.x509_package;
using asn1 = go.encoding.asn1_package;
using errors = go.errors_package;
using io = go.io_package;
using big = go.math.big_package;
using curve25519 = go.golang_org.x.crypto.curve25519_package;
using go;

namespace go {
namespace crypto
{
    public static partial class tls_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct ecdheKeyAgreement
        {
            // Constructors
            public ecdheKeyAgreement(NilType _)
            {
                this.version = default;
                this.sigType = default;
                this.privateKey = default;
                this.curveid = default;
                this.publicKey = default;
                this.x = default;
                this.y = default;
            }

            public ecdheKeyAgreement(ushort version = default, byte sigType = default, slice<byte> privateKey = default, CurveID curveid = default, slice<byte> publicKey = default, ref ptr<big.Int> x = default, ref ptr<big.Int> y = default)
            {
                this.version = version;
                this.sigType = sigType;
                this.privateKey = privateKey;
                this.curveid = curveid;
                this.publicKey = publicKey;
                this.x = x;
                this.y = y;
            }

            // Enable comparisons between nil and ecdheKeyAgreement struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ecdheKeyAgreement value, NilType nil) => value.Equals(default(ecdheKeyAgreement));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ecdheKeyAgreement value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ecdheKeyAgreement value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ecdheKeyAgreement value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ecdheKeyAgreement(NilType nil) => default(ecdheKeyAgreement);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static ecdheKeyAgreement ecdheKeyAgreement_cast(dynamic value)
        {
            return new ecdheKeyAgreement(value.version, value.sigType, value.privateKey, value.curveid, value.publicKey, ref value.x, ref value.y);
        }
    }
}}