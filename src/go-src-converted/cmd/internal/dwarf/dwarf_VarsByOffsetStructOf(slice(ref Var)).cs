//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:51:32 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class dwarf_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct VarsByOffset
        {
            // Value of the VarsByOffset struct
            private readonly slice<ref Var> m_value;

            public VarsByOffset(slice<ref Var> value) => m_value = value;

            // Enable implicit conversions between slice<ref Var> and VarsByOffset struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator VarsByOffset(slice<ref Var> value) => new VarsByOffset(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<ref Var>(VarsByOffset value) => value.m_value;
            
            // Enable comparisons between nil and VarsByOffset struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(VarsByOffset value, NilType nil) => value.Equals(default(VarsByOffset));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(VarsByOffset value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, VarsByOffset value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, VarsByOffset value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator VarsByOffset(NilType nil) => default(VarsByOffset);
        }
    }
}}}
