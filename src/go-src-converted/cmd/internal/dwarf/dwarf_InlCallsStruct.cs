//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:51:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using fmt = go.fmt_package;
using sort = go.sort_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class dwarf_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct InlCalls
        {
            // Constructors
            public InlCalls(NilType _)
            {
                this.Calls = default;
            }

            public InlCalls(slice<InlCall> Calls = default)
            {
                this.Calls = Calls;
            }

            // Enable comparisons between nil and InlCalls struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(InlCalls value, NilType nil) => value.Equals(default(InlCalls));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(InlCalls value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, InlCalls value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, InlCalls value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator InlCalls(NilType nil) => default(InlCalls);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static InlCalls InlCalls_cast(dynamic value)
        {
            return new InlCalls(value.Calls);
        }
    }
}}}