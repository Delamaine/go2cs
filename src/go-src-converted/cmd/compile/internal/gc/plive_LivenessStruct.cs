//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:28:05 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using objabi = go.cmd.@internal.objabi_package;
using src = go.cmd.@internal.src_package;
using md5 = go.crypto.md5_package;
using sha1 = go.crypto.sha1_package;
using fmt = go.fmt_package;
using os = go.os_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Liveness
        {
            // Constructors
            public Liveness(NilType _)
            {
                this.fn = default;
                this.f = default;
                this.vars = default;
                this.idx = default;
                this.stkptrsize = default;
                this.be = default;
                this.stackMapIndex = default;
                this.livevars = default;
                this.cache = default;
            }

            public Liveness(ref ptr<Node> fn = default, ref ptr<ssa.Func> f = default, slice<ref Node> vars = default, map<ref Node, int> idx = default, long stkptrsize = default, slice<BlockEffects> be = default, map<ref ssa.Value, long> stackMapIndex = default, slice<bvec> livevars = default, progeffectscache cache = default)
            {
                this.fn = fn;
                this.f = f;
                this.vars = vars;
                this.idx = idx;
                this.stkptrsize = stkptrsize;
                this.be = be;
                this.stackMapIndex = stackMapIndex;
                this.livevars = livevars;
                this.cache = cache;
            }

            // Enable comparisons between nil and Liveness struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Liveness value, NilType nil) => value.Equals(default(Liveness));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Liveness value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Liveness value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Liveness value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Liveness(NilType nil) => default(Liveness);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Liveness Liveness_cast(dynamic value)
        {
            return new Liveness(ref value.fn, ref value.f, value.vars, value.idx, value.stkptrsize, value.be, value.stackMapIndex, value.livevars, value.cache);
        }
    }
}}}}