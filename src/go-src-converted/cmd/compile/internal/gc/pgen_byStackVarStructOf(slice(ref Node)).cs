//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:27:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct byStackVar
        {
            // Value of the byStackVar struct
            private readonly slice<ref Node> m_value;

            public byStackVar(slice<ref Node> value) => m_value = value;

            // Enable implicit conversions between slice<ref Node> and byStackVar struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator byStackVar(slice<ref Node> value) => new byStackVar(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<ref Node>(byStackVar value) => value.m_value;
            
            // Enable comparisons between nil and byStackVar struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(byStackVar value, NilType nil) => value.Equals(default(byStackVar));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(byStackVar value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, byStackVar value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, byStackVar value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator byStackVar(NilType nil) => default(byStackVar);
        }
    }
}}}}
