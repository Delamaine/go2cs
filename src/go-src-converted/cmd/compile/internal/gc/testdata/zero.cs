// run
// Code generated by gen/zeroGen.go. DO NOT EDIT.

// package main -- go2cs converted at 2020 August 29 09:58:40 UTC
// Original source: C:\Go\src\cmd\compile\internal\gc\testdata\zero.go
using fmt = go.fmt_package;
using static go.builtin;

namespace go
{
    public static partial class main_package
    {
        public partial struct T1
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero1_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero1()
        {
            T1 a = new T1([8]byte{255,255,255,255,255,255,255,255},[1]byte{255},[8]byte{255,255,255,255,255,255,255,255});
            zero1_ssa(ref a.mid);
            T1 want = new T1([8]byte{255,255,255,255,255,255,255,255},[1]byte{0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero1 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T2
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero2_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero2()
        {
            T2 a = new T2([8]byte{255,255,255,255,255,255,255,255},[2]byte{255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero2_ssa(ref a.mid);
            T2 want = new T2([8]byte{255,255,255,255,255,255,255,255},[2]byte{0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero2 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T3
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero3_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero3()
        {
            T3 a = new T3([8]byte{255,255,255,255,255,255,255,255},[3]byte{255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero3_ssa(ref a.mid);
            T3 want = new T3([8]byte{255,255,255,255,255,255,255,255},[3]byte{0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero3 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T4
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero4_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero4()
        {
            T4 a = new T4([8]byte{255,255,255,255,255,255,255,255},[4]byte{255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero4_ssa(ref a.mid);
            T4 want = new T4([8]byte{255,255,255,255,255,255,255,255},[4]byte{0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero4 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T5
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero5_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero5()
        {
            T5 a = new T5([8]byte{255,255,255,255,255,255,255,255},[5]byte{255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero5_ssa(ref a.mid);
            T5 want = new T5([8]byte{255,255,255,255,255,255,255,255},[5]byte{0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero5 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T6
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero6_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero6()
        {
            T6 a = new T6([8]byte{255,255,255,255,255,255,255,255},[6]byte{255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero6_ssa(ref a.mid);
            T6 want = new T6([8]byte{255,255,255,255,255,255,255,255},[6]byte{0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero6 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T7
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero7_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero7()
        {
            T7 a = new T7([8]byte{255,255,255,255,255,255,255,255},[7]byte{255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero7_ssa(ref a.mid);
            T7 want = new T7([8]byte{255,255,255,255,255,255,255,255},[7]byte{0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero7 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T8
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero8_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero8()
        {
            T8 a = new T8([8]byte{255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero8_ssa(ref a.mid);
            T8 want = new T8([8]byte{255,255,255,255,255,255,255,255},[8]byte{0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero8 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T9
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero9_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero9()
        {
            T9 a = new T9([8]byte{255,255,255,255,255,255,255,255},[9]byte{255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero9_ssa(ref a.mid);
            T9 want = new T9([8]byte{255,255,255,255,255,255,255,255},[9]byte{0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero9 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T10
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero10_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero10()
        {
            T10 a = new T10([8]byte{255,255,255,255,255,255,255,255},[10]byte{255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero10_ssa(ref a.mid);
            T10 want = new T10([8]byte{255,255,255,255,255,255,255,255},[10]byte{0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero10 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T15
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero15_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero15()
        {
            T15 a = new T15([8]byte{255,255,255,255,255,255,255,255},[15]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero15_ssa(ref a.mid);
            T15 want = new T15([8]byte{255,255,255,255,255,255,255,255},[15]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero15 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T16
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero16_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero16()
        {
            T16 a = new T16([8]byte{255,255,255,255,255,255,255,255},[16]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero16_ssa(ref a.mid);
            T16 want = new T16([8]byte{255,255,255,255,255,255,255,255},[16]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero16 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T17
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero17_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero17()
        {
            T17 a = new T17([8]byte{255,255,255,255,255,255,255,255},[17]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero17_ssa(ref a.mid);
            T17 want = new T17([8]byte{255,255,255,255,255,255,255,255},[17]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero17 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T23
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero23_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero23()
        {
            T23 a = new T23([8]byte{255,255,255,255,255,255,255,255},[23]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero23_ssa(ref a.mid);
            T23 want = new T23([8]byte{255,255,255,255,255,255,255,255},[23]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero23 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T24
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero24_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero24()
        {
            T24 a = new T24([8]byte{255,255,255,255,255,255,255,255},[24]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero24_ssa(ref a.mid);
            T24 want = new T24([8]byte{255,255,255,255,255,255,255,255},[24]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero24 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T25
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero25_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero25()
        {
            T25 a = new T25([8]byte{255,255,255,255,255,255,255,255},[25]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero25_ssa(ref a.mid);
            T25 want = new T25([8]byte{255,255,255,255,255,255,255,255},[25]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero25 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T31
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero31_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero31()
        {
            T31 a = new T31([8]byte{255,255,255,255,255,255,255,255},[31]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero31_ssa(ref a.mid);
            T31 want = new T31([8]byte{255,255,255,255,255,255,255,255},[31]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero31 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T32
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero32_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero32()
        {
            T32 a = new T32([8]byte{255,255,255,255,255,255,255,255},[32]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero32_ssa(ref a.mid);
            T32 want = new T32([8]byte{255,255,255,255,255,255,255,255},[32]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero32 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T33
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero33_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero33()
        {
            T33 a = new T33([8]byte{255,255,255,255,255,255,255,255},[33]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero33_ssa(ref a.mid);
            T33 want = new T33([8]byte{255,255,255,255,255,255,255,255},[33]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero33 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T63
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero63_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero63()
        {
            T63 a = new T63([8]byte{255,255,255,255,255,255,255,255},[63]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero63_ssa(ref a.mid);
            T63 want = new T63([8]byte{255,255,255,255,255,255,255,255},[63]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero63 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T64
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero64_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero64()
        {
            T64 a = new T64([8]byte{255,255,255,255,255,255,255,255},[64]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero64_ssa(ref a.mid);
            T64 want = new T64([8]byte{255,255,255,255,255,255,255,255},[64]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero64 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T65
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero65_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero65()
        {
            T65 a = new T65([8]byte{255,255,255,255,255,255,255,255},[65]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},[8]byte{255,255,255,255,255,255,255,255});
            zero65_ssa(ref a.mid);
            T65 want = new T65([8]byte{255,255,255,255,255,255,255,255},[65]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero65 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T1023
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero1023_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero1023()
        {
            T1023 a = new T1023([8]byte{255,255,255,255,255,255,255,255},[1023]byte{},[8]byte{255,255,255,255,255,255,255,255});
            zero1023_ssa(ref a.mid);
            T1023 want = new T1023([8]byte{255,255,255,255,255,255,255,255},[1023]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero1023 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T1024
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero1024_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero1024()
        {
            T1024 a = new T1024([8]byte{255,255,255,255,255,255,255,255},[1024]byte{},[8]byte{255,255,255,255,255,255,255,255});
            zero1024_ssa(ref a.mid);
            T1024 want = new T1024([8]byte{255,255,255,255,255,255,255,255},[1024]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero1024 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T1025
        {
            public array<byte> pre;
            public array<byte> mid;
            public array<byte> post;
        }

        //go:noinline
        private static void zero1025_ssa(ref array<byte> x)
        {
            x.Value = new array<byte>(new byte[] {  });
        }
        private static void testZero1025()
        {
            T1025 a = new T1025([8]byte{255,255,255,255,255,255,255,255},[1025]byte{},[8]byte{255,255,255,255,255,255,255,255});
            zero1025_ssa(ref a.mid);
            T1025 want = new T1025([8]byte{255,255,255,255,255,255,255,255},[1025]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},[8]byte{255,255,255,255,255,255,255,255});
            if (a != want)
            {
                fmt.Printf("zero1025 got=%v, want %v\n", a, want);
                failed = true;
            }
        }

        public partial struct T8u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T8u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero8u1_ssa(ref T8u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero8u2_ssa(ref T8u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero8u()
        {
            T8u1 a = new T8u1(false,[8]byte{255,255,255,255,255,255,255,255});
            zero8u1_ssa(ref a);
            T8u1 want = new T8u1(false,[8]byte{0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero8u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T8u2 b = new T8u2(15,[8]byte{255,255,255,255,255,255,255,255});
            zero8u2_ssa(ref b);
            T8u2 wantb = new T8u2(15,[8]byte{0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero8u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        public partial struct T16u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T16u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero16u1_ssa(ref T16u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero16u2_ssa(ref T16u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero16u()
        {
            T16u1 a = new T16u1(false,[16]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero16u1_ssa(ref a);
            T16u1 want = new T16u1(false,[16]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero16u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T16u2 b = new T16u2(15,[16]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero16u2_ssa(ref b);
            T16u2 wantb = new T16u2(15,[16]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero16u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        public partial struct T24u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T24u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero24u1_ssa(ref T24u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero24u2_ssa(ref T24u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero24u()
        {
            T24u1 a = new T24u1(false,[24]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero24u1_ssa(ref a);
            T24u1 want = new T24u1(false,[24]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero24u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T24u2 b = new T24u2(15,[24]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero24u2_ssa(ref b);
            T24u2 wantb = new T24u2(15,[24]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero24u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        public partial struct T32u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T32u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero32u1_ssa(ref T32u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero32u2_ssa(ref T32u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero32u()
        {
            T32u1 a = new T32u1(false,[32]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero32u1_ssa(ref a);
            T32u1 want = new T32u1(false,[32]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero32u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T32u2 b = new T32u2(15,[32]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero32u2_ssa(ref b);
            T32u2 wantb = new T32u2(15,[32]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero32u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        public partial struct T64u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T64u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero64u1_ssa(ref T64u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero64u2_ssa(ref T64u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero64u()
        {
            T64u1 a = new T64u1(false,[64]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero64u1_ssa(ref a);
            T64u1 want = new T64u1(false,[64]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero64u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T64u2 b = new T64u2(15,[64]byte{255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255});
            zero64u2_ssa(ref b);
            T64u2 wantb = new T64u2(15,[64]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero64u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        public partial struct T256u1
        {
            public bool b;
            public array<byte> val;
        }
        public partial struct T256u2
        {
            public ushort i;
            public array<byte> val;
        }

        //go:noinline
        private static void zero256u1_ssa(ref T256u1 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }

        //go:noinline
        private static void zero256u2_ssa(ref T256u2 t)
        {
            t.val = new array<byte>(new byte[] {  });
        }
        private static void testZero256u()
        {
            T256u1 a = new T256u1(false,[256]byte{});
            zero256u1_ssa(ref a);
            T256u1 want = new T256u1(false,[256]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (a != want)
            {
                fmt.Printf("zero256u2 got=%v, want %v\n", a, want);
                failed = true;
            }
            T256u2 b = new T256u2(15,[256]byte{});
            zero256u2_ssa(ref b);
            T256u2 wantb = new T256u2(15,[256]byte{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
            if (b != wantb)
            {
                fmt.Printf("zero256u2 got=%v, want %v\n", b, wantb);
                failed = true;
            }
        }

        private static bool failed = default;

        private static void Main() => func((_, panic, __) =>
        {
            testZero1();
            testZero2();
            testZero3();
            testZero4();
            testZero5();
            testZero6();
            testZero7();
            testZero8();
            testZero9();
            testZero10();
            testZero15();
            testZero16();
            testZero17();
            testZero23();
            testZero24();
            testZero25();
            testZero31();
            testZero32();
            testZero33();
            testZero63();
            testZero64();
            testZero65();
            testZero1023();
            testZero1024();
            testZero1025();
            testZero8u();
            testZero16u();
            testZero24u();
            testZero32u();
            testZero64u();
            testZero256u();
            if (failed)
            {
                panic("failed");
            }
        });
    }
}
