//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:30:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct V
        {
            // Constructors
            public V(NilType _)
            {
                this.p = default;
                this.w = default;
                this.x = default;
            }

            public V(ref ptr<V> p = default, long w = default, long x = default)
            {
                this.p = p;
                this.w = w;
                this.x = x;
            }

            // Enable comparisons between nil and V struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(V value, NilType nil) => value.Equals(default(V));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(V value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, V value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, V value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator V(NilType nil) => default(V);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static V V_cast(dynamic value)
        {
            return new V(ref value.p, value.w, value.x);
        }
    }
}