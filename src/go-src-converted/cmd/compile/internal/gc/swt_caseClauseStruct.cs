//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:29:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using fmt = go.fmt_package;
using sort = go.sort_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct caseClause
        {
            // Constructors
            public caseClause(NilType _)
            {
                this.node = default;
                this.ordinal = default;
                this.hash = default;
                this.isconst = default;
            }

            public caseClause(ref ptr<Node> node = default, long ordinal = default, uint hash = default, bool isconst = default)
            {
                this.node = node;
                this.ordinal = ordinal;
                this.hash = hash;
                this.isconst = isconst;
            }

            // Enable comparisons between nil and caseClause struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(caseClause value, NilType nil) => value.Equals(default(caseClause));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(caseClause value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, caseClause value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, caseClause value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator caseClause(NilType nil) => default(caseClause);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static caseClause caseClause_cast(dynamic value)
        {
            return new caseClause(ref value.node, value.ordinal, value.hash, value.isconst);
        }
    }
}}}}