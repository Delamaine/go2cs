//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:26:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using fmt = go.fmt_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct EscState
        {
            // Constructors
            public EscState(NilType _)
            {
                this.theSink = default;
                this.dsts = default;
                this.loopdepth = default;
                this.pdepth = default;
                this.dstcount = default;
                this.edgecount = default;
                this.noesc = default;
                this.recursive = default;
                this.opts = default;
                this.walkgen = default;
            }

            public EscState(Node theSink = default, slice<ref Node> dsts = default, int loopdepth = default, long pdepth = default, long dstcount = default, long edgecount = default, slice<ref Node> noesc = default, bool recursive = default, slice<ref Node> opts = default, uint walkgen = default)
            {
                this.theSink = theSink;
                this.dsts = dsts;
                this.loopdepth = loopdepth;
                this.pdepth = pdepth;
                this.dstcount = dstcount;
                this.edgecount = edgecount;
                this.noesc = noesc;
                this.recursive = recursive;
                this.opts = opts;
                this.walkgen = walkgen;
            }

            // Enable comparisons between nil and EscState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(EscState value, NilType nil) => value.Equals(default(EscState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(EscState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, EscState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, EscState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator EscState(NilType nil) => default(EscState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static EscState EscState_cast(dynamic value)
        {
            return new EscState(value.theSink, value.dsts, value.loopdepth, value.pdepth, value.dstcount, value.edgecount, value.noesc, value.recursive, value.opts, value.walkgen);
        }
    }
}}}}