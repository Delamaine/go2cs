//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 09:26:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using fmt = go.fmt_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct NodeEscState
        {
            // Constructors
            public NodeEscState(NilType _)
            {
                this.Curfn = default;
                this.Flowsrc = default;
                this.Retval = default;
                this.Loopdepth = default;
                this.Level = default;
                this.Walkgen = default;
                this.Maxextraloopdepth = default;
            }

            public NodeEscState(ref ptr<Node> Curfn = default, slice<EscStep> Flowsrc = default, Nodes Retval = default, int Loopdepth = default, Level Level = default, uint Walkgen = default, int Maxextraloopdepth = default)
            {
                this.Curfn = Curfn;
                this.Flowsrc = Flowsrc;
                this.Retval = Retval;
                this.Loopdepth = Loopdepth;
                this.Level = Level;
                this.Walkgen = Walkgen;
                this.Maxextraloopdepth = Maxextraloopdepth;
            }

            // Enable comparisons between nil and NodeEscState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NodeEscState value, NilType nil) => value.Equals(default(NodeEscState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NodeEscState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, NodeEscState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, NodeEscState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator NodeEscState(NilType nil) => default(NodeEscState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static NodeEscState NodeEscState_cast(dynamic value)
        {
            return new NodeEscState(ref value.Curfn, value.Flowsrc, value.Retval, value.Loopdepth, value.Level, value.Walkgen, value.Maxextraloopdepth);
        }
    }
}}}}