//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 08:54:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct indVar
        {
            // Constructors
            public indVar(NilType _)
            {
                this.ind = default;
                this.inc = default;
                this.nxt = default;
                this.min = default;
                this.max = default;
                this.entry = default;
            }

            public indVar(ref ptr<Value> ind = default, ref ptr<Value> inc = default, ref ptr<Value> nxt = default, ref ptr<Value> min = default, ref ptr<Value> max = default, ref ptr<Block> entry = default)
            {
                this.ind = ind;
                this.inc = inc;
                this.nxt = nxt;
                this.min = min;
                this.max = max;
                this.entry = entry;
            }

            // Enable comparisons between nil and indVar struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(indVar value, NilType nil) => value.Equals(default(indVar));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(indVar value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, indVar value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, indVar value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator indVar(NilType nil) => default(indVar);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static indVar indVar_cast(dynamic value)
        {
            return new indVar(ref value.ind, ref value.inc, ref value.nxt, ref value.min, ref value.max, ref value.entry);
        }
    }
}}}}