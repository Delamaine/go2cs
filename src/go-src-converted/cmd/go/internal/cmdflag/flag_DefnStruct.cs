//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 10:01:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using flag = go.flag_package;
using fmt = go.fmt_package;
using os = go.os_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using @base = go.cmd.go.@internal.@base_package;
using go;

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class cmdflag_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Defn
        {
            // Constructors
            public Defn(NilType _)
            {
                this.Name = default;
                this.BoolVar = default;
                this.Value = default;
                this.PassToTest = default;
                this.Present = default;
            }

            public Defn(@string Name = default, ref ptr<bool> BoolVar = default, flag.Value Value = default, bool PassToTest = default, bool Present = default)
            {
                this.Name = Name;
                this.BoolVar = BoolVar;
                this.Value = Value;
                this.PassToTest = PassToTest;
                this.Present = Present;
            }

            // Enable comparisons between nil and Defn struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Defn value, NilType nil) => value.Equals(default(Defn));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Defn value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Defn value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Defn value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Defn(NilType nil) => default(Defn);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Defn Defn_cast(dynamic value)
        {
            return new Defn(value.Name, ref value.BoolVar, value.Value, value.PassToTest, value.Present);
        }
    }
}}}}