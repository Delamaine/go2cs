//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 10:02:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using elf = go.debug.elf_package;
using go;

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class sym_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Reloc
        {
            // Constructors
            public Reloc(NilType _)
            {
                this.Off = default;
                this.Siz = default;
                this.Done = default;
                this.Variant = default;
                this.Type = default;
                this.Add = default;
                this.Xadd = default;
                this.Sym = default;
                this.Xsym = default;
            }

            public Reloc(int Off = default, byte Siz = default, bool Done = default, RelocVariant Variant = default, objabi.RelocType Type = default, long Add = default, long Xadd = default, ref ptr<Symbol> Sym = default, ref ptr<Symbol> Xsym = default)
            {
                this.Off = Off;
                this.Siz = Siz;
                this.Done = Done;
                this.Variant = Variant;
                this.Type = Type;
                this.Add = Add;
                this.Xadd = Xadd;
                this.Sym = Sym;
                this.Xsym = Xsym;
            }

            // Enable comparisons between nil and Reloc struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Reloc value, NilType nil) => value.Equals(default(Reloc));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Reloc value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Reloc value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Reloc value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Reloc(NilType nil) => default(Reloc);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Reloc Reloc_cast(dynamic value)
        {
            return new Reloc(value.Off, value.Siz, value.Done, value.Variant, value.Type, value.Add, value.Xadd, ref value.Sym, ref value.Xsym);
        }
    }
}}}}