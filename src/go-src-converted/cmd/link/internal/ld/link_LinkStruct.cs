//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 August 29 10:04:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using sym = go.cmd.link.@internal.sym_package;
using elf = go.debug.elf_package;
using fmt = go.fmt_package;
using go;

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class ld_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Link
        {
            // Constructors
            public Link(NilType _)
            {
                this.Out = default;
                this.Syms = default;
                this.Arch = default;
                this.Debugvlog = default;
                this.Bso = default;
                this.Loaded = default;
                this.IsELF = default;
                this.HeadType = default;
                this.linkShared = default;
                this.LinkMode = default;
                this.BuildMode = default;
                this.Tlsg = default;
                this.Libdir = default;
                this.Library = default;
                this.LibraryByPkg = default;
                this.Shlibs = default;
                this.Tlsoffset = default;
                this.Textp = default;
                this.Filesyms = default;
                this.Moduledata = default;
                this.PackageFile = default;
                this.PackageShlib = default;
                this.tramps = default;
            }

            public Link(ref ptr<OutBuf> Out = default, ref ptr<sym.Symbols> Syms = default, ref ptr<sys.Arch> Arch = default, long Debugvlog = default, ref ptr<bufio.Writer> Bso = default, bool Loaded = default, bool IsELF = default, objabi.HeadType HeadType = default, bool linkShared = default, LinkMode LinkMode = default, BuildMode BuildMode = default, ref ptr<sym.Symbol> Tlsg = default, slice<@string> Libdir = default, slice<ref sym.Library> Library = default, map<@string, ref sym.Library> LibraryByPkg = default, slice<Shlib> Shlibs = default, long Tlsoffset = default, slice<ref sym.Symbol> Textp = default, slice<ref sym.Symbol> Filesyms = default, ref ptr<sym.Symbol> Moduledata = default, map<@string, @string> PackageFile = default, map<@string, @string> PackageShlib = default, slice<ref sym.Symbol> tramps = default)
            {
                this.Out = Out;
                this.Syms = Syms;
                this.Arch = Arch;
                this.Debugvlog = Debugvlog;
                this.Bso = Bso;
                this.Loaded = Loaded;
                this.IsELF = IsELF;
                this.HeadType = HeadType;
                this.linkShared = linkShared;
                this.LinkMode = LinkMode;
                this.BuildMode = BuildMode;
                this.Tlsg = Tlsg;
                this.Libdir = Libdir;
                this.Library = Library;
                this.LibraryByPkg = LibraryByPkg;
                this.Shlibs = Shlibs;
                this.Tlsoffset = Tlsoffset;
                this.Textp = Textp;
                this.Filesyms = Filesyms;
                this.Moduledata = Moduledata;
                this.PackageFile = PackageFile;
                this.PackageShlib = PackageShlib;
                this.tramps = tramps;
            }

            // Enable comparisons between nil and Link struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Link value, NilType nil) => value.Equals(default(Link));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Link value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Link value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Link value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Link(NilType nil) => default(Link);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Link Link_cast(dynamic value)
        {
            return new Link(ref value.Out, ref value.Syms, ref value.Arch, value.Debugvlog, ref value.Bso, value.Loaded, value.IsELF, value.HeadType, value.linkShared, value.LinkMode, value.BuildMode, ref value.Tlsg, value.Libdir, value.Library, value.LibraryByPkg, value.Shlibs, value.Tlsoffset, value.Textp, value.Filesyms, ref value.Moduledata, value.PackageFile, value.PackageShlib, value.tramps);
        }
    }
}}}}